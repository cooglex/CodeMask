<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cm="https://github.com/x-skywalker/codemask">
    <cm:LevelToIndentConverter x:Key="LevelToIndentConverter" />
    <Style x:Key="TreeListViewScrollViewerDefault_Style" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                        ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderDefault_Style}"
                                                        Columns="{Binding ColumnsHeader,
                                                                          RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                         AncestorType=cm:TreeListView}}"
                                                        DockPanel.Dock="Top" />
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding ContentControl.Content}"
                                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                        </DockPanel>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   AutomationProperties.AutomationId="VerticalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                                   Minimum="0"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   AutomationProperties.AutomationId="HorizontalScrollBar"
                                   Cursor="Arrow"
                                   Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                   Minimum="0"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset,
                                                   Mode=OneWay,
                                                   RelativeSource={RelativeSource TemplatedParent}}" />
                        <Rectangle Name="Corner"
                                   Grid.Row="1"
                                   Grid.Column="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewToggleButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="1"
                            SnapsToDevicePixels="true">
                        <Path x:Name="ExpandPath"
                              Margin="3"
                              Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3                                    L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"
                              Fill="{StaticResource TreeListViewToggleButtonBorderBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type cm:TreeListViewItem}" TargetType="{x:Type cm:TreeListViewItem}">
        <Setter Property="Height" Value="20" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{DynamicResource TreeListViewItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewItemBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeListViewItemTextBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cm:TreeListViewItem}">
                    <StackPanel>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <GridViewRowPresenter x:Name="PART_Header"
                                                  Margin="8,0,0,0"
                                                  Columns="{Binding ColumnsHeader,
                                                                    RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                                   AncestorType=cm:TreeListView}}"
                                                  Content="{TemplateBinding Header}" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TreeListViewItemBackgroundBrush_Selected}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeListViewItemTextBrush_Selected}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewItemBorderBrush_Selected}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource TreeListViewItemBackgroundBrush_Hover}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeListViewItemTextBrush_Hover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewItemBorderBrush_Hover}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource TreeListViewItemBackgroundBrush_SelectedInactive}" />
                            <Setter Property="Foreground" Value="{DynamicResource TreeListViewItemTextBrush_SelectedInactive}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewItemBorderBrush_SelectedInactive}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource TreeListViewItemTextBrush_Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type cm:TreeListView}">
        <Setter Property="Background" Value="{DynamicResource TreeListViewBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TreeListViewBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TreeListViewTextBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cm:TreeListView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Padding="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>